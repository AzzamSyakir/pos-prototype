services:
    app-db:
        image: postgres:13.22-alpine3.21
        container_name: app-db
        restart: always
        tty: true
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        ports:
            - ${DB_PORT}:5432
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}" ]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - app-db:/var/lib/postgresql/data
            - ./config/db/migration/init.sql:/docker-entrypoint-initdb.d/init.sql

    swagger-ui:
        image: swaggerapi/swagger-ui:latest
        container_name: swagger-ui
        restart: unless-stopped
        ports:
            - ${SWAGGER_PORT}:8080
        depends_on:
            - app
        volumes:
            - ../docs/api/swagger.json:/spec/docs/swagger.json
        environment:
            SWAGGER_JSON: /spec/docs/swagger.json
    redis:
        image: redis:alpine3.22
        container_name: redis
        restart: always
        ports:
            - ${REDIS_PORT}:6379
        volumes:
            - redis-data:/data
        environment:
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
        healthcheck:
            test: [ "CMD", "redis-cli", "-a", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 5

    app:
        build:
            context: ../
            dockerfile: docker/dockerfile.dev
        container_name: app
        restart: no
        tty: true
        depends_on:
            app-db:
                condition: service_healthy
            redis:
                condition: service_healthy
        environment:
            DB_HOST: app-db
            REDIS_HOST: redis
        ports:
            - ${APP_PORT}:8080

volumes:
    app-db:
    redis-data:
